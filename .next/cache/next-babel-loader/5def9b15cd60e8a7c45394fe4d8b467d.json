{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/cryptokowsik/Dapp-dev-nextjs/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport web3 from '../web3.js';\nimport Storage from '../ethereum/build/contracts/Storage.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          accounts = _this$props.accounts,\n          StorageInstance = _this$props.StorageInstance,\n          name = _this$props.name;\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, \"Contract address: \", StorageInstance.options.address, \" \", name));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts, networkId, StorageDeployedAddress, StorageInstance, name;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context.sent;\n                _context.next = 6;\n                return web3.eth.net.getId();\n\n              case 6:\n                networkId = _context.sent;\n                StorageDeployedAddress = Storage.networks[networkId].address;\n                _context.next = 10;\n                return new web3.eth.Contract(Storage.abi, StorageDeployedAddress);\n\n              case 10:\n                StorageInstance = _context.sent;\n                _context.next = 13;\n                return StorageInstance.methods.name().call();\n\n              case 13:\n                name = _context.sent;\n                return _context.abrupt(\"return\", {\n                  accounts: accounts,\n                  StorageInstance: StorageInstance,\n                  name: name\n                });\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](0);\n                alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n                console.log(error);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 17]]);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/cryptokowsik/Dapp-dev-nextjs/pages/index.js"],"names":["React","Component","web3","Storage","App","props","accounts","StorageInstance","name","options","address","eth","getAccounts","net","getId","networkId","StorageDeployedAddress","networks","Contract","abi","methods","call","alert","console","log","error"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0CAApB;;IACMC,G;;;;;;;;;;;;;6BAkBM;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACaC,eADb,eACaA,eADb;AAAA,UAC6BC,IAD7B,eAC6BA,IAD7B;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuBD,eAAe,CAACE,OAAhB,CAAwBC,OAA/C,OAAyDF,IAAzD,CADJ,CADJ;AAKH;;;;;;;;;;;;uBAtB8BN,IAAI,CAACS,GAAL,CAASC,WAAT,E;;;AAAjBN,gBAAAA,Q;;uBACkBJ,IAAI,CAACS,GAAL,CAASE,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,sB,GAAyBb,OAAO,CAACc,QAAR,CAAiBF,SAAjB,EAA4BL,O;;uBAC7B,IAAIR,IAAI,CAACS,GAAL,CAASO,QAAb,CAAsBf,OAAO,CAACgB,GAA9B,EAAmCH,sBAAnC,C;;;AAAxBT,gBAAAA,e;;uBACaA,eAAe,CAACa,OAAhB,CAAwBZ,IAAxB,GAA+Ba,IAA/B,E;;;AAAbb,gBAAAA,I;iDACC;AAACF,kBAAAA,QAAQ,EAARA,QAAD;AAAWC,kBAAAA,eAAe,EAAfA,eAAX;AAA2BC,kBAAAA,IAAI,EAAJA;AAA3B,iB;;;;;AAEPc,gBAAAA,KAAK,0EAAL;AAGEC,gBAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;;;;;;;;;;;;;;;;;;EAbIxB,S;;AA2BlB,eAAeG,GAAf","sourcesContent":["import React ,{Component} from 'react';\nimport web3 from '../web3.js';\nimport Storage from '../ethereum/build/contracts/Storage.json'; \nclass App extends Component{\n    static async getInitialProps(){\n        try{\n            const accounts = await web3.eth.getAccounts();\n            const networkId = await web3.eth.net.getId();\n            const StorageDeployedAddress = Storage.networks[networkId].address;\n            const StorageInstance = await new web3.eth.Contract(Storage.abi, StorageDeployedAddress);\n            const name = await StorageInstance.methods.name().call();\n            return {accounts, StorageInstance,name}\n        }catch(err){\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n              );\n              console.log(error);\n        }\n        \n    }\n\n    render(){\n        const {accounts, StorageInstance,name}=this.props;\n        return(\n            <div>\n                <h1>Contract address: {StorageInstance.options.address} {name}</h1>\n            </div>\n        )\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}