{"ast":null,"code":"var _jsxFileName = \"/home/cryptokowsik/Dapp-dev-nextjs/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport web3 from '../web3.js';\nimport Storage from '../ethereum/build/contracts/Storage.json';\n\nclass App extends Component {\n  static async getInitialProps() {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const StorageDeployedAddress = Storage.networks[networkId].address;\n      const StorageInstnace = await new web3.eth.Contract(Storage.abi, StorageDeployedAddress);\n      return {\n        accounts,\n        StorageInstnace\n      };\n    } catch (err) {\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.log(error);\n    }\n  }\n\n  render() {\n    console.log(this.props.accounts);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"Contract address: \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cryptokowsik/Dapp-dev-nextjs/pages/index.js"],"names":["React","Component","web3","Storage","App","getInitialProps","accounts","eth","getAccounts","networkId","net","getId","StorageDeployedAddress","networks","address","StorageInstnace","Contract","abi","err","alert","console","log","error","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0CAApB;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACvB,eAAaI,eAAb,GAA8B;AAC1B,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,SAAS,GAAG,MAAMP,IAAI,CAACK,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,YAAMC,sBAAsB,GAAGT,OAAO,CAACU,QAAR,CAAiBJ,SAAjB,EAA4BK,OAA3D;AACA,YAAMC,eAAe,GAAG,MAAM,IAAIb,IAAI,CAACK,GAAL,CAASS,QAAb,CAAsBb,OAAO,CAACc,GAA9B,EAAmCL,sBAAnC,CAA9B;AACA,aAAO;AAACN,QAAAA,QAAD;AAAWS,QAAAA;AAAX,OAAP;AACH,KAND,CAMC,OAAMG,GAAN,EAAU;AACPC,MAAAA,KAAK,CACA,wEADA,CAAL;AAGEC,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACL;AAEJ;;AACDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWlB,QAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ;AAKH;;AAvBsB;;AAyB3B,eAAeF,GAAf","sourcesContent":["import React ,{Component} from 'react';\nimport web3 from '../web3.js';\nimport Storage from '../ethereum/build/contracts/Storage.json';\nclass App extends Component{\n    static async getInitialProps(){\n        try{\n            const accounts = await web3.eth.getAccounts();\n            const networkId = await web3.eth.net.getId();\n            const StorageDeployedAddress = Storage.networks[networkId].address;\n            const StorageInstnace = await new web3.eth.Contract(Storage.abi, StorageDeployedAddress);\n            return {accounts, StorageInstnace}\n        }catch(err){\n            alert(\n                `Failed to load web3, accounts, or contract. Check console for details.`,\n              );\n              console.log(error);\n        }\n        \n    }\n    render(){\n        console.log(this.props.accounts)\n        return(\n            <div>\n                <h1>Contract address: {}</h1>\n            </div>\n        )\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}